executablembseplugin.PopulatePartsMenu = MBSE Method: General Utilities\\Populate parts
executablembseplugin.CreateRAStructureMenu = MBSE Method: Requirements Analysis\\Create a Use Case package structure
executablembseplugin.CreateContextPackageMenu = MBSE Method: Requirements Analysis\\Create a Context Diagram Package structure
executablembseplugin.SetupRAProperties = MBSE Method: Setup project properties
executablembseplugin.CreateFullSimFAStructureMenu = MBSE Method: Functional Analysis\\Create Simulation Block package structure
executablembseplugin.CreateSimpleSimFAStructureMenu = MBSE Method: Functional Analysis\\Create the FunctionalAnalysisPkg package structure\\Simple Sim
executablembseplugin.CreateNoSimFAStructureMenu = MBSE Method: Functional Analysis\\Create the FunctionalAnalysisPkg package structure\\No Sim
executablembseplugin.CreateDSStructureMenu = MBSE Method: Design Synthesis\\Create the DesignSynthesisPkg package structure
executablembseplugin.QuickHyperlinkMenu = MBSE Method: General Utilities\\Quick hyperlink
executablembseplugin.SetupGatewayProjectMenu = MBSE Method: Gateway Helpers\\Setup Gateway project based on rqtf template
executablembseplugin.SelectDependsOnElementsMenu = MBSE Method: General Utilities\\Select Depends On element(s)\\All
executablembseplugin.SelectDependentElementsMenu = MBSE Method: General Utilities\\Select Dependent element(s)\\All
executablembseplugin.SelectDependsOnDeriveOnlyElementsMenu = MBSE Method: General Utilities\\Select Depends On element(s)\\Derives
executablembseplugin.SelectDependentDeriveOnlyElementsMenu = MBSE Method: General Utilities\\Select Dependent element(s)\\Derives
executablembseplugin.SelectDependsOnSatisfyOnlyElementsMenu = MBSE Method: General Utilities\\Select Depends On element(s)\\Satisfies
executablembseplugin.SelectDependentSatisfyOnlyElementsMenu = MBSE Method: General Utilities\\Select Dependent element(s)\\Satisfies
executablembseplugin.SelectDependsOnVerifyOnlyElementsMenu = MBSE Method: General Utilities\\Select Depends On element(s)\\Verifies
executablembseplugin.SelectDependentVerifyOnlyElementsMenu = MBSE Method: General Utilities\\Select Dependent element(s)\\Verifies
executablembseplugin.SelectDependsOnRefineOnlyElementsMenu = MBSE Method: General Utilities\\Select Depends On element(s)\\Refines
executablembseplugin.SelectDependentRefineOnlyElementsMenu = MBSE Method: General Utilities\\Select Dependent element(s)\\Refines
executablembseplugin.SelectDependsOnDeriveReqtOnlyElementsMenu = MBSE Method: General Utilities\\Select Depends On element(s)\\Derive Requirement
executablembseplugin.SelectDependentDeriveReqtOnlyElementsMenu = MBSE Method: General Utilities\\Select Dependent element(s)\\Derive Requirement
executablembseplugin.AddRelativeUnitMenu = MBSE Method: General Utilities\\Add a relative reference to an external unit (.sbs)
executablembseplugin.CreateNestedADMenu = MBSE Method: Requirements Analysis\\Create nested Activity Diagram for this use case
executablembseplugin.ReportOnNamingAndTraceabilityMenu = MBSE Method: Requirements Analysis\\Report on naming and traceability checks for elements on Activity Diagram
executablembseplugin.MoveUnclaimedReqtsMenu = MBSE Method: Gateway Helpers\\Move unclaimed requirements ready for Gateway sync back to DOORS
executablembseplugin.CreateNewRequirementMenu = MBSE Method: Requirements Analysis\\Create a new requirement
executablembseplugin.PerformRenameInBrowserMenu = MBSE Method: Requirements Analysis\\Perform rename in browser for elements on Activity Diagrams
executablembseplugin.UpdateNestedADNamesMenu = MBSE Method: Requirements Analysis\\Update nested activity diagram name(s) to reflect use case name(s)
executablembseplugin.DeleteTaggedAsDeletedAtHighLevelMenu = MBSE Method: Gateway Helpers\\Delete the Gateway tagged as Deleted_At_High_Level requirements
executablembseplugin.StartLinkMenu = MBSE Method: Requirements Analysis\\Start link to a requirement
executablembseplugin.EndLinkMenu = MBSE Method: Requirements Analysis\\End link at a requirement
executablembseplugin.RollUpTraceabilityUpToTransitionLevel = MBSE Method: Requirements Analysis\\Roll up traceability to the transition
executablembseplugin.layoutDependencies = MBSE Method: Requirements Analysis\\Re-layout dependencies on diagram(s)
executablembseplugin.PopulateRequirementsForSDsMenu = MBSE Method: Requirements Analysis\\Populate requirements for SD(s) based on messages
executablembseplugin.UpdateVerificationDependenciesForSDsMenu = MBSE Method: Requirements Analysis\\Update Verification dependencies for SD(s) based on populated requirements
executablembseplugin.ExportRequirementsToCsvForImportIntoDOORSNG = MBSE Method: Requirements Analysis\\Export requirements to csv for import into DOORS NG
executablembseplugin.SwitchRequirementsToDOORSNG = MBSE Method: Requirements Analysis\\Switch requirements to DOORS NG
executablembseplugin.PopulateFullSimPackageHierarchyForAnalysisBlockMenu = MBSE Method: Functional Analysis\\Populate functional block package hierarchy\\Full Sim
executablembseplugin.PopulateSimpleSimPackageHierarchyForAnalysisBlockMenu = MBSE Method: Functional Analysis\\Populate functional block package hierarchy\\Simple Sim
executablembseplugin.PopulateNoSimPackageHierarchyForAnalysisBlockMenu = MBSE Method: Functional Analysis\\Populate functional block package hierarchy\\No Sim
executablembseplugin.CreateIncomingEventMenu = MBSE Method: Functional Analysis\\Create an incoming event sent by an actor
executablembseplugin.CreateAnOperationMenu = MBSE Method: Functional Analysis\\Create an operation that the system does
executablembseplugin.CreateOutgoingEventMenu = MBSE Method: Functional Analysis\\Create an outgoing event sent to an actor
executablembseplugin.CreateAttributeMenu = MBSE Method: Functional Analysis\\Create an attribute/flow-port/check operation
executablembseplugin.UpdateAttributeOrCheckOpMenu = MBSE Method: Functional Analysis\\Update attribute and/or check operation owned by the system
executablembseplugin.CreateEventForAttributeMenu = MBSE Method: Functional Analysis\\Create an incoming event sent by an actor to change this attribute
executablembseplugin.DeriveDownstreamRequirementMenu = MBSE Method: Functional Analysis\\Derive downstream requirement
executablembseplugin.CreateNewTestCaseForTestDriverMenu = MBSE Method: Functional Analysis\\Create new TestCase for «TestDriver»
executablembseplugin.AddNewActorToPackageMenu = MBSE Method: Functional Analysis\\Add new actor to package under development
executablembseplugin.AddNewBlockPartToPackageMenu = MBSE Method: Functional Analysis\\Add new block/part to package under development
executablembseplugin.CopyActivityDiagramsMenu = MBSE Method: Functional Analysis\\Copy activity diagrams to package under development
executablembseplugin.DeleteEventsAndRelatedElementsMenu = MBSE Method: Delete Event and related elements from Model
executablembseplugin.SwitchMenusToMoreDetailedADMenu = MBSE Method: Functional Analysis\\Switch menus to «MoreDetailedAD»
executablembseplugin.SwitchMenusToFullSim = MBSE Method: Functional Analysis\\Switch menus to Full Sim
executablembseplugin.SwitchMenusToSimpleSim = MBSE Method: Functional Analysis\\Switch menus to Simple Sim
executablembseplugin.RecreateAutoShowSequenceDiagramMenu = MBSE Method: Functional Analysis\\Re-create «AutoShow» sequence diagram
executablembseplugin.MakeAttributeAPublishFlowportMenu = MBSE Method: Design Synthesis\\Make attribute a «publish» flowport
executablembseplugin.MakeAttributeASubscribeFlowportMenu = MBSE Method: Design Synthesis\\Make attribute a «subscribe» flowport
executablembseplugin.DeleteAttributeAndRelatedElementsMenu = MBSE Method: Design Synthesis\\Delete attribute and related elements
executablembseplugin.UpdatePortsAndInterfacesMenu = MBSE Method: Design Synthesis\\Update Ports and Interfaces
executablembseplugin.GenerateSequenceDiagramMenu = MBSE Method: Design Synthesis\\Generate Sequence Diagram
#
# Copyright (C) 2016-2021  MBSE Training and Consulting Limited (www.executablembse.com)
#
# Change history:
# #109 06-NOV-2016: Added .properties support for localisation of menus (F.J.Chadburn)
# #266 07-DEC-2020: Add initial support for CVS export & switching master of requirements to DOORS NG (F.J.Chadburn)
#
# This file is part of SysMLHelperPlugin.
#
# SysMLHelperPlugin is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# SysMLHelperPlugin is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with SysMLHelperPlugin.  If not, see <http://www.gnu.org/licenses/>.